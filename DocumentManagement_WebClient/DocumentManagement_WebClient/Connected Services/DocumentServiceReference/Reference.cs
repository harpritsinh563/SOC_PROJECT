//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocumentManagement_WebClient.DocumentServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://schemas.datacontract.org/2004/07/DocumentManagement.Models")]
    [System.SerializableAttribute()]
    public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((this.DocumentIdField.Equals(value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentPath {
            get {
                return this.DocumentPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentPathField, value) != true)) {
                    this.DocumentPathField = value;
                    this.RaisePropertyChanged("DocumentPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DocumentServiceReference.IDocumentService")]
    public interface IDocumentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/AddDocument", ReplyAction="http://tempuri.org/IDocumentService/AddDocumentResponse")]
        int AddDocument(DocumentManagement_WebClient.DocumentServiceReference.Document doc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/AddDocument", ReplyAction="http://tempuri.org/IDocumentService/AddDocumentResponse")]
        System.Threading.Tasks.Task<int> AddDocumentAsync(DocumentManagement_WebClient.DocumentServiceReference.Document doc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/RemoveDocument", ReplyAction="http://tempuri.org/IDocumentService/RemoveDocumentResponse")]
        int RemoveDocument(int docId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/RemoveDocument", ReplyAction="http://tempuri.org/IDocumentService/RemoveDocumentResponse")]
        System.Threading.Tasks.Task<int> RemoveDocumentAsync(int docId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocument", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentResponse")]
        DocumentManagement_WebClient.DocumentServiceReference.Document GetDocument(int docId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocument", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentResponse")]
        System.Threading.Tasks.Task<DocumentManagement_WebClient.DocumentServiceReference.Document> GetDocumentAsync(int docId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentsOfUser", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentsOfUserResponse")]
        System.Data.DataSet GetDocumentsOfUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentsOfUser", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentsOfUserResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDocumentsOfUserAsync(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentServiceChannel : DocumentManagement_WebClient.DocumentServiceReference.IDocumentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentServiceClient : System.ServiceModel.ClientBase<DocumentManagement_WebClient.DocumentServiceReference.IDocumentService>, DocumentManagement_WebClient.DocumentServiceReference.IDocumentService {
        
        public DocumentServiceClient() {
        }
        
        public DocumentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddDocument(DocumentManagement_WebClient.DocumentServiceReference.Document doc) {
            return base.Channel.AddDocument(doc);
        }
        
        public System.Threading.Tasks.Task<int> AddDocumentAsync(DocumentManagement_WebClient.DocumentServiceReference.Document doc) {
            return base.Channel.AddDocumentAsync(doc);
        }
        
        public int RemoveDocument(int docId) {
            return base.Channel.RemoveDocument(docId);
        }
        
        public System.Threading.Tasks.Task<int> RemoveDocumentAsync(int docId) {
            return base.Channel.RemoveDocumentAsync(docId);
        }
        
        public DocumentManagement_WebClient.DocumentServiceReference.Document GetDocument(int docId) {
            return base.Channel.GetDocument(docId);
        }
        
        public System.Threading.Tasks.Task<DocumentManagement_WebClient.DocumentServiceReference.Document> GetDocumentAsync(int docId) {
            return base.Channel.GetDocumentAsync(docId);
        }
        
        public System.Data.DataSet GetDocumentsOfUser(int userId) {
            return base.Channel.GetDocumentsOfUser(userId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDocumentsOfUserAsync(int userId) {
            return base.Channel.GetDocumentsOfUserAsync(userId);
        }
    }
}
